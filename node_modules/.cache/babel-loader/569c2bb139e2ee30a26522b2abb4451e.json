{"ast":null,"code":"var _jsxFileName = \"/Users/rafa/Documents/tmp/insta-test/src/components/Card/Card.js\",\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport Button from \"../Button/Button\";\nimport \"./Card.css\";\nimport useDataApi from \"../../service/useDataApi\"; // import { useCountDown } from \"../../service/useCountDown\";\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Card = () => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const {\n    result\n  } = useDataApi();\n\n  const newFuntion = number => {\n    _s();\n\n    const [counter, setCounter] = useState(number);\n    useEffect(() => {\n      let interval = setInterval(() => {\n        setCounter(counter => counter - 1000);\n      }, 1000);\n      return () => clearInterval(interval);\n    }, [counter]);\n    const values = {\n      hours: Math.floor(counter % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)),\n      minutes: Math.floor(counter % (1000 * 60 * 60) / (1000 * 60)),\n      seconds: Math.floor(counter % (1000 * 60) / 1000)\n    };\n\n    if (counter < 0) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"\\\"prazo expirado\\\"\"\n      }, void 0, false);\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [values.hours, \":\", values.minutes, \":\", values.seconds]\n      }, void 0, true);\n    }\n  };\n\n  _s(newFuntion, \"jqIHFAgJztcC0n2AbQD3y0RQY8M=\");\n\n  const useCountDown = newFuntion;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: useCountDown(790968)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s2(Card, \"nvFjMyL/oD2U8lR/ncq7k2BrCZY=\", true, function () {\n  return [useDataApi];\n});\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/rafa/Documents/tmp/insta-test/src/components/Card/Card.js"],"names":["React","useEffect","useState","Fragment","Button","useDataApi","Card","result","newFuntion","number","counter","setCounter","interval","setInterval","clearInterval","values","hours","Math","floor","minutes","seconds","useCountDown"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,YAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CACA;;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAaF,UAAU,EAA7B;;AAEA,QAAMG,UAAU,GAAIC,MAAD,IAAY;AAAA;;AAC7B,UAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAACO,MAAD,CAAtC;AAEAR,IAAAA,SAAS,CAAC,MAAM;AACd,UAAIW,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BF,QAAAA,UAAU,CAAED,OAAD,IAAaA,OAAO,GAAG,IAAxB,CAAV;AACD,OAFyB,EAEvB,IAFuB,CAA1B;AAGA,aAAO,MAAMI,aAAa,CAACF,QAAD,CAA1B;AACD,KALQ,EAKN,CAACF,OAAD,CALM,CAAT;AAOA,UAAMK,MAAM,GAAG;AACbC,MAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAYR,OAAO,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAR,IAAqC,OAAO,EAAP,GAAY,EAAjD,CAAX,CADM;AAEbS,MAAAA,OAAO,EAAEF,IAAI,CAACC,KAAL,CAAYR,OAAO,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAR,IAAgC,OAAO,EAAvC,CAAX,CAFI;AAGbU,MAAAA,OAAO,EAAEH,IAAI,CAACC,KAAL,CAAYR,OAAO,IAAI,OAAO,EAAX,CAAR,GAA0B,IAArC;AAHI,KAAf;;AAMA,QAAIA,OAAO,GAAG,CAAd,EAAiB;AACf,0BAAO;AAAA;AAAA,uBAAP;AACD,KAFD,MAEO;AACL,0BACE;AAAA,mBACGK,MAAM,CAACC,KADV,OACkBD,MAAM,CAACI,OADzB,OACmCJ,MAAM,CAACK,OAD1C;AAAA,sBADF;AAKD;AACF,GAzBD;;AAHiB,KAGXZ,UAHW;;AA6BjB,QAAMa,YAAY,GAAGb,UAArB;AAEA,sBACE;AAAA,2BACE;AAAA,gBAAKa,YAAY,CAAC,MAAD;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAsDD,CArFD;;IAAMf,I;UACeD,U;;;KADfC,I;AAuFN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState, Fragment } from \"react\";\nimport Button from \"../Button/Button\";\nimport \"./Card.css\";\nimport useDataApi from \"../../service/useDataApi\";\n// import { useCountDown } from \"../../service/useCountDown\";\n\nconst Card = () => {\n  const { result } = useDataApi();\n\n  const newFuntion = (number) => {\n    const [counter, setCounter] = useState(number);\n\n    useEffect(() => {\n      let interval = setInterval(() => {\n        setCounter((counter) => counter - 1000);\n      }, 1000);\n      return () => clearInterval(interval);\n    }, [counter]);\n\n    const values = {\n      hours: Math.floor((counter % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n      minutes: Math.floor((counter % (1000 * 60 * 60)) / (1000 * 60)),\n      seconds: Math.floor((counter % (1000 * 60)) / 1000),\n    };\n\n    if (counter < 0) {\n      return <>\"prazo expirado\"</>;\n    } else {\n      return (\n        <>\n          {values.hours}:{values.minutes}:{values.seconds}\n        </>\n      );\n    }\n  };\n  const useCountDown = newFuntion;\n\n  return (\n    <>\n      <h1>{useCountDown(790968)}</h1>\n      {/* {result.map(\n        ({\n          id,\n          imageUrl,\n          amount,\n          remainingTime,\n          make,\n          version,\n          model,\n          year,\n          km,\n        }) => (\n          <Fragment key={id}>\n            <div className=\"card\">\n              <div className=\"container-2\">\n                <img src={imageUrl} alt=\"people\" />\n                <span>ver detalhes</span>\n              </div>\n\n              <div class=\"parent\">\n                <div class=\"div1\">\n                  <span>tempo restante</span>\n                  <span>fsdfsdfsdfsd</span>\n                </div>\n                <div class=\"div2\">\n                  <span>Ãºltima oferta</span>\n                  <div class=\"divider\"></div>\n                  <span>{amount}</span>\n                </div>\n                <div class=\"div3\">\n                  {`${make} \n                  ${model} \n                  ${version} \n                  ${year} `}\n                </div>\n                <div class=\"div4\">{year}</div>\n\n                <div class=\"div5\">\n                  <span>{km}</span>\n                  <div class=\"divider\"></div>\n                </div>\n                <div class=\"div6\">\n                  <Button />\n                </div>\n              </div>\n            </div>\n          </Fragment>\n        )\n      )} */}\n    </>\n  );\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}