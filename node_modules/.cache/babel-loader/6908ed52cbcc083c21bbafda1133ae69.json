{"ast":null,"code":"var _jsxFileName = \"/Users/rafa/Documents/tmp/insta-test/src/service/useCountDown.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Count() {\n  _s();\n\n  const end = new Date(2021, 11, 31).getTime();\n  const [days, setDays] = useState();\n  const [hours, setHours] = useState();\n  const [minutes, setMinutes] = useState();\n  const [seconds, setSeconds] = useState();\n  setInterval(() => {\n    const now = new Date().getTime(); // const diff = end - now;\n\n    setDays(Math.floor(now / (1000 * 60 * 60 * 24)));\n    setHours(Math.floor(now % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)));\n    setMinutes(Math.floor(now % (1000 * 60 * 60) / (1000 * 60)));\n    setSeconds(Math.floor(now % (1000 * 60) / 1000));\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: days\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" days\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: hours\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" hours\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: minutes\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \":\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: seconds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" seconds\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Count, \"gf5w0vIr3Usz/U7kYaByEwnuCU4=\");\n\n_c = Count;\n\nvar _c;\n\n$RefreshReg$(_c, \"Count\");","map":{"version":3,"sources":["/Users/rafa/Documents/tmp/insta-test/src/service/useCountDown.js"],"names":["useState","Count","end","Date","getTime","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","setInterval","now","Math","floor"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAMC,GAAG,GAAG,IAAIC,IAAJ,CAAS,IAAT,EAAe,EAAf,EAAmB,EAAnB,EAAuBC,OAAvB,EAAZ;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,EAAtC;AAEAa,EAAAA,WAAW,CAAC,MAAM;AAChB,UAAMC,GAAG,GAAG,IAAIX,IAAJ,GAAWC,OAAX,EAAZ,CADgB,CAEhB;;AAEAE,IAAAA,OAAO,CAACS,IAAI,CAACC,KAAL,CAAWF,GAAG,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAd,CAAD,CAAP;AACAN,IAAAA,QAAQ,CAACO,IAAI,CAACC,KAAL,CAAYF,GAAG,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAJ,IAAiC,OAAO,EAAP,GAAY,EAA7C,CAAX,CAAD,CAAR;AACAJ,IAAAA,UAAU,CAACK,IAAI,CAACC,KAAL,CAAYF,GAAG,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAJ,IAA4B,OAAO,EAAnC,CAAX,CAAD,CAAV;AACAF,IAAAA,UAAU,CAACG,IAAI,CAACC,KAAL,CAAYF,GAAG,IAAI,OAAO,EAAX,CAAJ,GAAsB,IAAjC,CAAD,CAAV;AACD,GARU,EAQR,IARQ,CAAX;AAUA,sBACE;AAAA,2BACE;AAAK,MAAA,KAAK,EAAC,MAAX;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAMT;AAAN;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA,gCACE;AAAA,oBAAME;AAAN;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAA,gCACE;AAAA,oBAAME;AAAN;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,eAgBE;AAAA,gCACE;AAAA,oBAAME;AAAN;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA3CuBV,K;;KAAAA,K","sourcesContent":["import { useState } from \"react\";\n\nexport default function Count() {\n  const end = new Date(2021, 11, 31).getTime();\n\n  const [days, setDays] = useState();\n  const [hours, setHours] = useState();\n  const [minutes, setMinutes] = useState();\n  const [seconds, setSeconds] = useState();\n\n  setInterval(() => {\n    const now = new Date().getTime();\n    // const diff = end - now;\n\n    setDays(Math.floor(now / (1000 * 60 * 60 * 24)));\n    setHours(Math.floor((now % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n    setMinutes(Math.floor((now % (1000 * 60 * 60)) / (1000 * 60)));\n    setSeconds(Math.floor((now % (1000 * 60)) / 1000));\n  }, 1000);\n\n  return (\n    <div>\n      <div class=\"flex\">\n        <div>\n          <div>{days}</div>\n          <div> days</div>\n        </div>\n        <span>:</span>\n        <div>\n          <div>{hours}</div>\n          <div> hours</div>\n        </div>\n        <span>:</span>\n        <div>\n          <div>{minutes}</div>\n          <div> minutes</div>\n        </div>\n        <span>:</span>\n        <div>\n          <div>{seconds}</div>\n          <div> seconds</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}