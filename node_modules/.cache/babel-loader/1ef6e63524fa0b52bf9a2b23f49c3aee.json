{"ast":null,"code":"var _jsxFileName = \"/Users/rafa/Documents/tmp/insta-test/src/service/useCountDown.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Countdown = ({\n  seconds\n}) => {\n  _s();\n\n  // initialize timeLeft with the seconds prop\n  const [timeLeft, setTimeLeft] = useState(seconds);\n  useEffect(() => {\n    // exit early when we reach 0\n    if (!timeLeft) return; // save intervalId to clear the interval when the\n    // component re-renders\n\n    const intervalId = setInterval(() => {\n      setTimeLeft(timeLeft - 1);\n    }, 1000); // clear interval on re-render to avoid memory leaks\n\n    return () => clearInterval(intervalId); // add timeLeft as a dependency to re-rerun the effect\n    // when we update it\n  }, [timeLeft]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: timeLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Countdown, \"9JJnqmTCdqLHDdCmRHNOIx0rlJg=\");\n\n_c = Countdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"Countdown\");","map":{"version":3,"sources":["/Users/rafa/Documents/tmp/insta-test/src/service/useCountDown.js"],"names":["React","useState","useEffect","Countdown","seconds","timeLeft","setTimeLeft","intervalId","setInterval","clearInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACjC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAACG,OAAD,CAAxC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAI,CAACG,QAAL,EAAe,OAFD,CAId;AACA;;AACA,UAAME,UAAU,GAAGC,WAAW,CAAC,MAAM;AACnCF,MAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACD,KAF6B,EAE3B,IAF2B,CAA9B,CANc,CAUd;;AACA,WAAO,MAAMI,aAAa,CAACF,UAAD,CAA1B,CAXc,CAYd;AACA;AACD,GAdQ,EAcN,CAACF,QAAD,CAdM,CAAT;AAgBA,sBACE;AAAA,2BACE;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAzBD;;GAAMF,S;;KAAAA,S","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Countdown = ({ seconds }) => {\n  // initialize timeLeft with the seconds prop\n  const [timeLeft, setTimeLeft] = useState(seconds);\n\n  useEffect(() => {\n    // exit early when we reach 0\n    if (!timeLeft) return;\n\n    // save intervalId to clear the interval when the\n    // component re-renders\n    const intervalId = setInterval(() => {\n      setTimeLeft(timeLeft - 1);\n    }, 1000);\n\n    // clear interval on re-render to avoid memory leaks\n    return () => clearInterval(intervalId);\n    // add timeLeft as a dependency to re-rerun the effect\n    // when we update it\n  }, [timeLeft]);\n\n  return (\n    <div>\n      <h1>{timeLeft}</h1>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}